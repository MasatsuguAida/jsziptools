{"name":"Jsziptools","body":"# jsziptools\r\n\r\nIt's a utility of zlib, gzip and zip format binary data.\r\n\r\n## required\r\n\r\nrequired ffDataview(http://github.com/ukyo/ffDataView).\r\n\r\n## example\r\n\r\n### zlib\r\n\r\ndecompress compressed swf file:\r\n\r\n    jz.utils.load('compressed.swf', function(swf){\r\n      var header = new Uint8Array(swf, 0, 8);\r\n      var decompressedData = jz.zlib.decompress(new Uint8Array(swf, 8));\r\n    });\r\n    \r\n\r\n\r\n### gzip\r\n\r\ncompress and download:\r\n\r\n    var text = 'aaaaaabbbbbbbbbbbccccccccc';\r\n    var gzbuff = jz.gz.compress(jz.utils.stringToArrayBuffer(text));\r\n    var URL = window.URL || window.webkitURL;\r\n    var bb = new jz.BlobBuilder();\r\n    bb.append(gzbuff);\r\n    location.href = URL.createObjectURL(bb.getBlob());\r\n\r\n### zip\r\n\r\nzip:\r\n\r\n    var files = [\r\n      {name: \"foo\", childern: [ //folder\r\n        {name: \"hello.txt\", str: \"Hello World!\"}, //string\r\n        {name: \"bar.js\", buffer: buffer}, //ArrayBuffer\r\n        {name: \"hoge.mp3\", url: \"audiodata/hoge.mp3\"} //xhr\r\n      ]}\r\n    ];\r\n    \r\n    //sync\r\n    var buffer = jz.zip.pack({\r\n      files: files,\r\n      level: 4 //compress level\r\n    });\r\n    \r\n    //async(recommend!)\r\n    jz.zip.pack({\r\n      files: files,\r\n      level: 5,\r\n      complete: function(buffer){\r\n        //do anything.\r\n      }\r\n    })\r\n    \r\n    //set compress level each files.\r\n    var files = [\r\n      {name: \"foo\", childern: [ //folder\r\n        {name: \"hello.txt\", str: \"Hello World!\", level: 0}, //string\r\n        {name: \"bar.js\", buffer: buffer, level: 9}, //ArrayBuffer\r\n        {name: \"hoge.mp3\", url: \"audiodata/hoge.mp3\", level: 3} //xhr\r\n      ]}\r\n    ];\r\n    \r\n    jz.zip.pack({\r\n      files: files,\r\n      complete: function(buffer){\r\n        //do anything.\r\n      }\r\n    });\r\n\r\n\r\nunzip:\r\n\r\n    //if arg is string, load with xhr.\r\n    var loader = jz.zip.decompress(\"foo.zip\");\r\n    //get file pathes.\r\n    loader.getFileNames();\r\n    //file is read lazy.\r\n    loader.getFileAsText(loader.getFileNames[0], function(result){\r\n      alert(result);\r\n    });\r\n\r\nsupport chrome, firefox, IE10.","tagline":"zip utility implemented with JavaScript","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}